type _Schema_
  @fulltext(
    name: "nftContractSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "NftContract"
        fields: [{ name: "id" }, { name: "name" }, { name: "symbol" }]
      }
    ]
  )

type Nft @entity {
  # {contractAddress}-{tokenId}
  id: ID!
  burnedAt: BigInt
  contract: NftContract!
  mintedAt: BigInt!
  transfers: [Transfer!]! @derivedFrom(field: "nft")
  ownership: [Ownership!]! @derivedFrom(field: "nft")
  tokenID: BigInt!
  tokenURI: String
  updatedAt: BigInt!
}

type NftContract @entity {
  # {contractAddress}
  id: ID!
  createdAt: BigInt!
  name: String
  nfts: [Nft!]! @derivedFrom(field: "contract")
  numOwners: BigInt!
  numTokens: BigInt!
  supportsMetadata: Boolean!
  symbol: String
  transfers: [Transfer!]! @derivedFrom(field: "contract")
  type: NftType!
}

type Transfer @entity {
  # {contractAddress}-{tokenId}-{from}-{to}-{transactionHash}
  id: ID!
  contract: NftContract!
  from: Bytes!
  nft: Nft!
  quantity: BigInt!
  timestamp: BigInt!
  to: Bytes!
  transactionHash: Bytes!
}

type Ownership @entity {
  # {contractAddress}-{tokenId}-{ownerAddress}
  id: ID!
  owner: Bytes!
  nft: Nft!
  quantity: BigInt!
  updatedAt: BigInt!
}

type NftContractOwner @entity {
  # {contractAddress}-{owner}
  id: ID!
  owner: Bytes!
  contract: NftContract!
  quantity: BigInt!
}

enum NftType {
  ERC721
  ERC1155
}
